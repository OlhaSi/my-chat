{"version":3,"sources":["modules/chat/chat-content/chat-content.module.css","modules/left-side/contacts/contacts.module.css","modules/left-side/search-bar/search-bar.module.css","modules/chat/message-bar/message-bar.module.css","App.module.css","modules/left-side/left-side.module.css","components/avatar/avatar.module.css","modules/chat/chat.module.css","modules/chat/header/header.module.css","modules/left-side/search-bar/search-bar.js","components/avatar/avatar.js","modules/left-side/contacts/contacts.js","modules/left-side/left-side.js","modules/chat/header/header.js","modules/chat/chat-content/chat-content.js","modules/chat/message-bar/message-bar.js","modules/chat/chat.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SearchBar","onFilter","onSearch","useCallback","e","target","value","className","styles","searchBarContainer","avatar","size","color","searchInput","searchInputText","placeholder","type","onChange","Avatar","src","alt","Contacts","chats","activeChat","setActiveChat","handleClick","chat","contactsContainer","map","msec","person","messages","messageContainer","id","messageContainerActive","onClick","bind","contentWrapper","icon","content","name","length","message","date","timestamp","Date","toDateString","LeftSide","useState","filteredList","setFilteredList","query","filtered","forEach","toLowerCase","includes","push","containerLeftSide","Header","headerContainer","formatTime","toLocaleString","ChatContent","chatContainer","msgObj","receivedWrapper","messageDetails","textReceived","timeReceived","sentWrapper","textSent","timeSent","MessageBar","sendInput","sendInputText","Chat","container","App","ChatData","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da57874a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"chat-content_chatContainer__Amo5g\",\"receivedWrapper\":\"chat-content_receivedWrapper__cEnNO\",\"sentWrapper\":\"chat-content_sentWrapper__2UNj-\",\"messageDetails\":\"chat-content_messageDetails__1-ksd\",\"textReceived\":\"chat-content_textReceived__1oWZV\",\"textSent\":\"chat-content_textSent__2Cakc\",\"timeReceived\":\"chat-content_timeReceived__36cq5\",\"timeSent\":\"chat-content_timeSent__1Dlfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsContainer\":\"contacts_contactsContainer__38Fq7\",\"messageContainer\":\"contacts_messageContainer__KChwu\",\"messageContainerActive\":\"contacts_messageContainerActive__28FtB\",\"contentWrapper\":\"contacts_contentWrapper__2TyLV\",\"content\":\"contacts_content__9CC3S\",\"message\":\"contacts_message__3FSZf\",\"date\":\"contacts_date__2kKnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"search-bar_avatar__2Pe8A\",\"searchBarContainer\":\"search-bar_searchBarContainer__3Vlhi\",\"searchInput\":\"search-bar_searchInput__11KSw\",\"searchInputText\":\"search-bar_searchInputText__19xxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"message-bar_messageContainer__3YW3M\",\"sendInput\":\"message-bar_sendInput__3GB7G\",\"sendInputText\":\"message-bar_sendInputText__3h5xu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerLeftSide\":\"left-side_containerLeftSide__1iSe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"avatar_avatar__1QlmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chat_container__2lJ3D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__2UoPr\"};","import React, { useCallback } from \"react\";\nimport styles from \"./search-bar.module.css\";\n\nimport { FaSearch, FaUserCircle } from \"react-icons/fa\";\n\nconst SearchBar = ({ onFilter }) => {\n  const onSearch = useCallback(\n    (e) => {\n      onFilter(e.target.value);\n    },\n    [onFilter]\n  );\n\n  return (\n    <div className={styles.searchBarContainer}>\n      <div className={styles.avatar}>\n        <FaUserCircle size=\"50px\" color=\"slategrey\" />\n      </div>\n\n      <div className={styles.searchInput}>\n        <FaSearch size=\"12px\" color=\"silver\" />\n\n        <input\n          className={styles.searchInputText}\n          placeholder=\"Search or start new chat\"\n          type=\"text\"\n          onChange={onSearch}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport styles from \"./avatar.module.css\";\n\nconst Avatar = ({ src }) => {\n  return <img src={src} alt=\"avatar\" className={styles.avatar} />;\n};\n\nexport default Avatar;\n","import React, { useCallback } from \"react\";\nimport styles from \"./contacts.module.css\";\nimport Avatar from \"../../../components/avatar/avatar\";\n\nconst formatTime = (msec) => {\n  const date = new Date(msec);\n  return date.toDateString();\n};\n\nconst Contacts = ({ chats, activeChat, setActiveChat }) => {\n  const handleClick = useCallback(\n    (chat) => {\n      setActiveChat(chat);\n    },\n    [setActiveChat]\n  );\n\n  return (\n    <div className={styles.contactsContainer}>\n      <p>Chats</p>\n      {chats.map((chat) => {\n        const { person, messages } = chat;\n\n        let className = styles.messageContainer;\n        if (person.id === activeChat.person.id) {\n          className += \" \" + styles.messageContainerActive;\n        }\n\n        return (\n          <div\n            key={person.id}\n            className={className}\n            onClick={handleClick.bind({}, chat)}\n          >\n            <div className={styles.contentWrapper}>\n              <Avatar src={person.icon} />\n              <div className={styles.content}>\n                <div>{person.name}</div>\n                {messages.length > 0 && (\n                  <div className={styles.message}>\n                    {messages[messages.length - 1].message}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {messages.length > 0 && (\n              <div className={styles.date}>\n                {formatTime(messages[messages.length - 1].timestamp)}\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React, { useCallback, useState } from \"react\";\nimport styles from \"./left-side.module.css\";\n\nimport SearchBar from \"./search-bar/search-bar\";\nimport Contacts from \"./contacts/contacts\";\n\nconst LeftSide = ({ chats, activeChat, setActiveChat }) => {\n  const [filteredList, setFilteredList] = useState(chats);\n  const onFilter = useCallback(\n    (query) => {\n      if (query === \"\") {\n        setFilteredList(chats);\n      } else {\n        const filtered = [];\n        chats.forEach((chat) => {\n          const {\n            person: { name },\n          } = chat;\n          if (name.toLowerCase().includes(query.toLowerCase())) {\n            filtered.push(chat);\n          }\n        });\n\n        setFilteredList(filtered);\n      }\n    },\n    [chats]\n  );\n\n  return (\n    <div className={styles.containerLeftSide}>\n      <SearchBar onFilter={onFilter} />\n      <Contacts\n        chats={filteredList}\n        activeChat={activeChat}\n        setActiveChat={setActiveChat}\n      />\n    </div>\n  );\n};\n\nexport default LeftSide;\n","import React from \"react\";\nimport styles from \"./header.module.css\";\nimport Avatar from \"../../../components/avatar/avatar\";\n\nconst Header = ({ person }) => {\n  return (\n    <div className={styles.headerContainer}>\n      <Avatar src={person.icon} />\n      <span>{person.name}</span>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./chat-content.module.css\";\nimport Avatar from \"../../../components/avatar/avatar\";\n\nconst formatTime = (msec) => {\n  const date = new Date(msec);\n  return date.toLocaleString();\n};\n\nconst ChatContent = ({ activeChat: { messages, person } }) => {\n  return (\n    <div className={styles.chatContainer}>\n      {messages?.map((msgObj) => {\n        if (!msgObj) {\n          return null;\n        }\n        if (msgObj.type === \"received\") {\n          return (\n            <div key={msgObj.id} className={styles.receivedWrapper}>\n              <div className={styles.messageDetails}>\n                <Avatar src={person?.icon} />\n                <div className={styles.textReceived}>{msgObj.message}</div>\n              </div>\n              <div className={styles.timeReceived}>\n                {formatTime(msgObj.timestamp)}\n              </div>\n            </div>\n          );\n        }\n\n        return (\n          <div key={msgObj.id} className={styles.sentWrapper}>\n            <div className={styles.textSent}>{msgObj.message}</div>\n            <div className={styles.timeSent}>\n              {formatTime(msgObj.timestamp)}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ChatContent;\n","import React from \"react\";\nimport styles from \"./message-bar.module.css\";\n\nimport { MdSend } from \"react-icons/md\";\n\nconst MessageBar = () => {\n  return (\n    <div className={styles.messageContainer}>\n      <div className={styles.sendInput}>\n        <MdSend size=\"20px\" color=\"slategrey\" />\n\n        <input\n          className={styles.sendInputText}\n          placeholder=\"Type your message\"\n          type=\"text\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MessageBar;\n","import React from \"react\";\nimport styles from \"./chat.module.css\";\nimport Header from \"./header/header\";\nimport ChatContent from \"./chat-content/chat-content\";\nimport MessageBar from \"./message-bar/message-bar\";\n\nconst Chat = ({ activeChat }) => {\n  return (\n    <div className={styles.container}>\n      <Header person={activeChat.person} />\n      <ChatContent activeChat={activeChat} />\n      <MessageBar />\n    </div>\n  );\n};\n\nexport default Chat;\n","import styles from \"./App.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport LeftSide from \"./modules/left-side/left-side\";\nimport Chat from \"./modules/chat/chat\";\nimport ChatData from \"./data/chats.json\";\n\nconst App = () => {\n  const [chats, setChats] = useState(ChatData.chats);\n  const [activeChat, setActiveChat] = useState(ChatData.chats[0]);\n\n  useEffect(() => {}, []);\n\n  return (\n    <div className={styles.App}>\n      <LeftSide\n        chats={chats}\n        activeChat={activeChat}\n        setActiveChat={setActiveChat}\n      />\n      <Chat activeChat={activeChat} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}